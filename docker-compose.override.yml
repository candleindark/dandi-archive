services:
  django:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "./manage.py",
      "runserver_plus", "0.0.0.0:8000"
    ]
    # Log printing via Rich is enhanced by a TTY
    tty: true
    environment:
      UV_ENV_FILE: ./dev/.env.docker-compose
    working_dir: /opt/django-project
    volumes:
      - .:/opt/django-project
      - uv_cache:/var/cache/uv
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy

  celery:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "uv", "run",
      "celery",
      "--app", "dandiapi.celery",
      "worker",
      "--loglevel", "INFO",
      "--without-heartbeat",
      "-Q", "celery,calculate_sha256,ingest_zarr_archive,manifest-worker",
      "-B"
    ]
    # Docker Compose does not set the TTY width, which causes Celery errors
    tty: false
    environment:
      UV_ENV_FILE: ./dev/.env.docker-compose
    working_dir: /opt/django-project
    volumes:
      - .:/opt/django-project
      - uv_cache:/var/cache/uv
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  uv_cache:
